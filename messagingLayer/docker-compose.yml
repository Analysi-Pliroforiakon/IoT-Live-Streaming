---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka0:
    image: confluentinc/cp-kafka:7.3.1
    hostname: kafka0
    container_name: kafka0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "8090:8090"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_JMX_HOSTNAME: "kafka0"
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=kafka0 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9999 -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_LOG_RETENTION_BYTES: 26214400 # set max partition size equal to 25MB
    # healthcheck:
    #   test: kafka-topics --bootstrap-server broker:29092 --list
    #   interval: 30s
    #   timeout: 30s
    #   retries: 10
    #   start_period: 10s
  
  kafka1:
    image: confluentinc/cp-kafka:7.3.1
    hostname: kafka1
    container_name: kafka1
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9192:9192"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29192,PLAINTEXT_HOST://localhost:9192
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_JMX_HOSTNAME: "kafka1"
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=kafka1 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9999 -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_LOG_RETENTION_BYTES: 26214400
      
  kafka2:
    image: confluentinc/cp-kafka:7.3.1
    hostname: kafka2
    container_name: kafka2
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9292:9292"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29292,PLAINTEXT_HOST://localhost:9292
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_JMX_HOSTNAME: "kafka2"
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=kafka2 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9999 -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_LOG_RETENTION_BYTES: 26214400

  topics_setup:
    image: confluentinc/cp-kafka:7.3.1
    hostname: topics_setup
    container_name: topics_setup
    depends_on:
      - zookeeper
      - kafka0
      - kafka1
      - kafka2
    volumes:
      - ./setup_topics.sh:/setup_topics.sh
    entrypoint: sh -c "/setup_topics.sh"
    stdin_open: true
    tty: true
    
  cmak:
    image: ghcr.io/eshepelyuk/dckr/cmak-3.0.0.5:latest
    hostname: cmak
    container_name: cmak
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"

  cmak2zk:
    image: ghcr.io/eshepelyuk/dckr/cmak2zk:latest
    restart: on-failure
    container_name: cmak2zk
    command:
      - 'zookeeper:2181'
      - '/app/etc/cmak_cluster_config.yaml'
    depends_on:
      - "zookeeper"
    volumes:
      - "${PWD}/cmak_cluster_config.yaml:/app/etc/cmak_cluster_config.yaml:ro"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.1
    hostname: schema-registry
    container_name: schema-registry
    restart:  unless-stopped
    depends_on:
      - kafka0
      # kafka0:
        # condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka0:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "localhost:8081/subjects"]
    #   interval: 30s
    #   timeout: 30s
    #   retries: 10
    #   start_period: 10s

  kafka-connect-cp:
    image: confluentinc/cp-kafka-connect:7.3.1
    container_name: kafka-connect-cp
    depends_on:
      - zookeeper
      - kafka0
      - schema-registry
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka0:29092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect-cp"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "3"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "3"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "3"
      CONNECT_PLUGIN_PATH: '/usr/share/java'
    volumes:
      #- $PWD/scripts:/scripts
      #- ./connectors/kafka-connect-hbase-kafka-2-8-4.0.0/kafka-connect-hbase-kafka-3-1-assembly-4.0.0.jar:/usr/share/java/kafka-connect-hbase-kafka-3-1-assembly-4.0.0.jar
      - ./connectors:/usr/share/java/kafka-connect-hbase
    command:
      - bash
      - -c
      - |
        sleep infinity &
        /etc/confluent/docker/run

  # hbase:
  #   image: harisekhon/hbase
  #   container_name: hbase
  #   hostname: hbase  
  #   ports:
  #     - 2181:2181

  # hbase-master:
  #   image: harisekhon/hbase:${VERSION:-latest}
  #   command: master
  #   ports:
  #     - 16000:16000
  #     - 16010:16010
  # hbase-regionserver:
  #   image: harisekhon/hbase:${VERSION:-latest}
  #   command: regionserver
  #   ports:
  #     - 16030:16030
  #     - 16201:16201
  #     - 16301:16301
  # hbase-thrift:
  #   image: harisekhon/hbase:${VERSION:-latest}
  #   command: thrift
  #   ports:
  #     - 9090:9090
  #     - 9095:9095
  # hbase-stargate:
  #   image: harisekhon/hbase:${VERSION:-latest}
  #   command: stargate
  #   ports:
  #     - 8080:8080
  #     - 8085:8085